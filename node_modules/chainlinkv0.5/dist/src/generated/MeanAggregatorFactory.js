"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
class MeanAggregatorFactory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy() {
        return super.deploy();
    }
    getDeployTransaction() {
        return super.getDeployTransaction();
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MeanAggregatorFactory = MeanAggregatorFactory;
const _abi = [
    {
        constant: false,
        inputs: [
            {
                name: "_requestId",
                type: "bytes32"
            },
            {
                name: "_sAId",
                type: "bytes32"
            },
            {
                name: "_oracle",
                type: "address"
            },
            {
                name: "_value",
                type: "bytes32"
            }
        ],
        name: "fulfill",
        outputs: [
            {
                name: "success",
                type: "bool"
            },
            {
                name: "complete",
                type: "bool"
            },
            {
                name: "response",
                type: "bytes"
            },
            {
                name: "paymentAmounts",
                type: "int256[]"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                name: "_sAId",
                type: "bytes32"
            },
            {
                components: [
                    {
                        name: "payment",
                        type: "uint256"
                    },
                    {
                        name: "expiration",
                        type: "uint256"
                    },
                    {
                        name: "endAt",
                        type: "uint256"
                    },
                    {
                        name: "oracles",
                        type: "address[]"
                    },
                    {
                        name: "requestDigest",
                        type: "bytes32"
                    },
                    {
                        name: "aggregator",
                        type: "address"
                    },
                    {
                        name: "aggInitiateJobSelector",
                        type: "bytes4"
                    },
                    {
                        name: "aggFulfillSelector",
                        type: "bytes4"
                    }
                ],
                name: "_sa",
                type: "tuple"
            }
        ],
        name: "initiateJob",
        outputs: [
            {
                name: "success",
                type: "bool"
            },
            {
                name: "message",
                type: "bytes"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    }
];
const _bytecode = "0x608060405234801561001057600080fd5b50610ac4806100206000396000f3fe60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680639760168f14610051578063e16c4c9414610091575b600080fd5b34801561005d57600080fd5b506100786004803603610073919081019061071c565b6100cf565b6040516100889493929190610891565b60405180910390f35b34801561009d57600080fd5b506100b860048036036100b3919081019061077f565b61044e565b6040516100c69291906108e4565b60405180910390f35b6000806060806001600089815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561018057600080826040805190810160405280601781526020017f6f7261636c6520616c7265616479207265706f72746564000000000000000000815250909350935093509350610443565b60008060008981526020019081526020016000205486600190048115156101a357fe5b04905060008060008a81526020019081526020016000205487600190048115156101c957fe5b069050600081600560008d81526020019081526020016000205401905060008060008c8152602001908152602001600020548281151561020557fe5b0484600460008f81526020019081526020016000205401019050600460008d815260200190815260200160002054811015151561023e57fe5b80600460008e8152602001908152602001600020819055506000808c8152602001908152602001600020548281151561027357fe5b06600560008e8152602001908152602001600020819055506001600360008e8152602001908152602001600020600082825401925050819055506001975060018060008e815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000808c815260200190815260200160002054600360008e815260200190815260200160002054149650861561043e57600460008d81526020019081526020016000205460405160200161036d9190610914565b60405160208183030381529060405295506000808c8152602001908152602001600020546040519080825280602002602001820160405280156103bf5781602001602082028038833980820191505090505b50945060008090505b6000808d81526020019081526020016000205481101561043c576000808d815260200190815260200160002054600260008e81526020019081526020016000205481151561041257fe5b04868281518110151561042157fe5b906020019060200201818152505080806001019150506103c8565b505b505050505b945094509450949050565b600060606000806000868152602001908152602001600020541415156104af5760006040805190810160405280601581526020017f6a6f6220616c726561647920696e69746961746564000000000000000000000081525091509150610562565b60008360600151511415610525576000606060405190810160405280602281526020017f6d75737420646570656e64206f6e206174206c65617374206f6e65206f72616381526020017f6c6500000000000000000000000000000000000000000000000000000000000081525091509150610562565b8260600151516000808681526020019081526020016000208190555082600001516002600086815260200190815260200160002081905550600191505b9250929050565b600061057582356109f4565b905092915050565b600082601f830112151561059057600080fd5b81356105a361059e8261095c565b61092f565b915081818352602084019350602081019050838560208402820111156105c857600080fd5b60005b838110156105f857816105de8882610569565b8452602084019350602083019250506001810190506105cb565b5050505092915050565b600061060e8235610a06565b905092915050565b60006106228235610a10565b905092915050565b6000610100828403121561063d57600080fd5b61064861010061092f565b9050600061065884828501610708565b600083015250602061066c84828501610708565b602083015250604061068084828501610708565b604083015250606082013567ffffffffffffffff8111156106a057600080fd5b6106ac8482850161057d565b60608301525060806106c084828501610602565b60808301525060a06106d484828501610569565b60a08301525060c06106e884828501610616565b60c08301525060e06106fc84828501610616565b60e08301525092915050565b60006107148235610a3c565b905092915050565b6000806000806080858703121561073257600080fd5b600061074087828801610602565b945050602061075187828801610602565b935050604061076287828801610569565b925050606061077387828801610602565b91505092959194509250565b6000806040838503121561079257600080fd5b60006107a085828601610602565b925050602083013567ffffffffffffffff8111156107bd57600080fd5b6107c98582860161062a565b9150509250929050565b60006107de82610991565b8084526020840193506107f083610984565b60005b8281101561082257610806868351610873565b61080f826109a7565b91506020860195506001810190506107f3565b50849250505092915050565b610837816109b4565b82525050565b60006108488261099c565b80845261085c816020860160208601610a46565b61086581610a79565b602085010191505092915050565b61087c816109c0565b82525050565b61088b816109ea565b82525050565b60006080820190506108a6600083018761082e565b6108b3602083018661082e565b81810360408301526108c5818561083d565b905081810360608301526108d981846107d3565b905095945050505050565b60006040820190506108f9600083018561082e565b818103602083015261090b818461083d565b90509392505050565b60006020820190506109296000830184610882565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561095257600080fd5b8060405250919050565b600067ffffffffffffffff82111561097357600080fd5b602082029050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109ff826109ca565b9050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60005b83811015610a64578082015181840152602081019050610a49565b83811115610a73576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820a0166dc409da011cff1dc16bb38abfe01b6d88e89506728b802bcec7aeb654756c6578706572696d656e74616cf50037";
//# sourceMappingURL=MeanAggregatorFactory.js.map