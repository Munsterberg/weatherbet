/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface LinkExInterfaceInterface extends Interface {
  functions: {
    update: TypedFunctionDescription<{
      encode([rate]: [BigNumberish]): string;
    }>;

    currentRate: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {};
}

export class LinkExInterface extends Contract {
  connect(signerOrProvider: Signer | Provider | string): LinkExInterface;
  attach(addressOrName: string): LinkExInterface;
  deployed(): Promise<LinkExInterface>;

  on(event: EventFilter | string, listener: Listener): LinkExInterface;
  once(event: EventFilter | string, listener: Listener): LinkExInterface;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): LinkExInterface;
  removeAllListeners(eventName: EventFilter | string): LinkExInterface;
  removeListener(eventName: any, listener: Listener): LinkExInterface;

  interface: LinkExInterfaceInterface;

  functions: {
    update(
      rate: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    currentRate(): Promise<BigNumber>;
  };

  update(
    rate: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  currentRate(): Promise<BigNumber>;

  filters: {};

  estimate: {
    update(rate: BigNumberish): Promise<BigNumber>;

    currentRate(): Promise<BigNumber>;
  };
}
