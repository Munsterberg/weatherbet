{
	"schemaVersion": "2.0.0",
	"contractName": "CoordinatorInterface",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "_requestId",
						"type": "bytes32"
					},
					{
						"name": "_aggregatorArgs",
						"type": "bytes32"
					}
				],
				"name": "fulfillOracleRequest",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"components": [
							{
								"name": "payment",
								"type": "uint256"
							},
							{
								"name": "expiration",
								"type": "uint256"
							},
							{
								"name": "endAt",
								"type": "uint256"
							},
							{
								"name": "oracles",
								"type": "address[]"
							},
							{
								"name": "requestDigest",
								"type": "bytes32"
							},
							{
								"name": "aggregator",
								"type": "address"
							},
							{
								"name": "aggInitiateJobSelector",
								"type": "bytes4"
							},
							{
								"name": "aggFulfillSelector",
								"type": "bytes4"
							}
						],
						"name": "_agreement",
						"type": "tuple"
					},
					{
						"components": [
							{
								"name": "vs",
								"type": "uint8[]"
							},
							{
								"name": "rs",
								"type": "bytes32[]"
							},
							{
								"name": "ss",
								"type": "bytes32[]"
							}
						],
						"name": "_signatures",
						"type": "tuple"
					}
				],
				"name": "initiateServiceAgreement",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x",
				"opcodes": "",
				"sourceMap": ""
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x",
				"opcodes": "",
				"sourceMap": ""
			}
		}
	},
	"sources": {
		"dev/CoordinatorInterface.sol": {
			"id": 8
		}
	},
	"sourceCodes": {
		"dev/CoordinatorInterface.sol": "pragma solidity 0.5.0;\npragma experimental ABIEncoderV2;\n\ncontract CoordinatorInterface {\n\n  struct ServiceAgreement {\n    uint256 payment;\n    uint256 expiration;\n    uint256 endAt;\n    address[] oracles;\n    // This effectively functions as an ID tag for the off-chain job of the\n    // service agreement. It is calculated as the keccak256 hash of the\n    // normalized JSON request to create the ServiceAgreement, but that identity\n    // is unused, and its value is essentially arbitrary.\n    bytes32 requestDigest;\n    // Specification of aggregator interface. See ../tests/MeanAggregator.sol\n    // for example\n    address aggregator;\n    // Selectors for the interface methods must be specified, because their\n    // arguments can vary from aggregator to aggregator.\n    //\n    // Function selector for aggregator initiateJob method\n    bytes4 aggInitiateJobSelector;\n    // Function selector for aggregator fulfill method\n    bytes4 aggFulfillSelector;\n  }\n\n  struct OracleSignatures {\n    uint8[] vs;\n    bytes32[] rs;\n    bytes32[] ss;\n  }\n\n  function initiateServiceAgreement(\n    ServiceAgreement memory _agreement,\n    OracleSignatures memory _signatures)\n    public returns (bytes32);\n\n  function fulfillOracleRequest(\n    bytes32 _requestId,\n    bytes32 _aggregatorArgs)\n    external returns (bool);\n}\n"
	},
	"sourceTreeHashHex": "0x4a7172bb8c07e1495e1b366518af8edcc85a344bf8ec03cc8df091c8d4a5f033",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.0+commit.1d4f565a.js",
		"settings": {
			"optimizer": {
				"enabled": false
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap"
					]
				}
			},
			"remappings": []
		}
	},
	"networks": {}
}